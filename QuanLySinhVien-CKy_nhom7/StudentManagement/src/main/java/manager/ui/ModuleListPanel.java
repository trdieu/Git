/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manager.ui;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.Vector;
import javax.swing.BorderFactory;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import manager.control.ModuleListControl;
import manager.entity.ModuleEntity;

/**
 *
 * @author Dell
 */
public class ModuleListPanel extends javax.swing.JPanel {
    private ModuleListControl moduleListControl;
    private String facultyName;
    /**
     * Creates new form ModuleListPanel
     */
    public ModuleListPanel() {
        initComponents();
        moduleListControl = new ModuleListControl();
    }
    
    public void initTable() {
        pagination.setVisible(false);
        JTableHeader header = moduleListTable.getTableHeader();
        header.setOpaque(false);
        header.setBackground(new Color(72, 3, 111));
        header.setForeground(Color.white);
        header.setFont(new java.awt.Font("SansSerif", 1, 14));
        moduleScroll.getViewport().setBackground(Color.WHITE);
        Border border = BorderFactory.createEmptyBorder( 0, 0, 0, 0 );
        moduleScroll.setViewportBorder(border);
        moduleScroll.setBorder(border);
        moduleListControl.setTotalModule();
        moduleListControl.setMaxResult(20);
        int size = moduleListControl.getTotalModule();
        pagination.setSize(size);
        pagination.setTable(new Table() {
            public void displayData(int firstResult) {
                List resultList = moduleListControl.getModuleList(firstResult);
                displayModuleList(resultList, firstResult);
            }
        });
        List resultList = moduleListControl.getModuleList(0);
        displayModuleList(resultList, 0);
        if (size < 20) {
            pagination.setVisible(false);
        } else {
            pagination.setVisible(true);
        }
    }

    private void displayModuleList(List resultList, int firstResult) {
        Vector<String> tableHeaders = new Vector<String>();
        Vector tableData = new Vector();
        tableHeaders.add("Mã học phần");
        tableHeaders.add("Tên học phần");
        tableHeaders.add("Thời lượng");
        tableHeaders.add("Số tín chỉ");
        tableHeaders.add("TC học phí");
        tableHeaders.add("Trọng số");
        tableHeaders.add("Viện quản lý");

        for (int i = 0; i < resultList.size(); i++) {
            ModuleEntity module = (ModuleEntity) resultList.get(i);
            Vector<Object> oneRow = new Vector<Object>();
            oneRow.add(module.getMaHp());
            oneRow.add(module.getTenHp());
            oneRow.add(module.getThoiLuong());
            oneRow.add(module.getTinChi());
            oneRow.add(module.getTinChiHocPhi());
            oneRow.add(module.getTrongSo());
            oneRow.add(module.getTenKhoa());
            tableData.add(oneRow);
        }
        moduleListTable.setModel(new DefaultTableModel(tableData, tableHeaders));
    }
    
    public void reset() {
        facultyComboBox.removeAllItems();
        moduleCodeTextField.setText(null);
        moduleNameTextField.setText(null);
        DefaultTableModel dm = (DefaultTableModel) moduleListTable.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        bodyPanel = new javax.swing.JPanel();
        facultyComboBox = new javax.swing.JComboBox<>();
        facultyLabel = new javax.swing.JLabel();
        moduleCodeLabel = new javax.swing.JLabel();
        moduleNameLabel = new javax.swing.JLabel();
        moduleCodeTextField = new javax.swing.JTextField();
        moduleNameTextField = new javax.swing.JTextField();
        tablePanel = new javax.swing.JPanel();
        moduleScroll = new javax.swing.JScrollPane();
        moduleListTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        pagination = new manager.ui.Pagination();

        setPreferredSize(new java.awt.Dimension(1020, 565));

        headerPanel.setBackground(new java.awt.Color(110, 89, 222));
        headerPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 13));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Danh sách học phần");
        headerPanel.add(jLabel2);

        bodyPanel.setBackground(new java.awt.Color(255, 255, 255));

        facultyComboBox.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        facultyComboBox.setForeground(new java.awt.Color(54, 33, 89));
        facultyComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                facultyComboBoxItemStateChanged(evt);
            }
        });

        facultyLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        facultyLabel.setForeground(new java.awt.Color(54, 33, 89));
        facultyLabel.setText("Tìm theo khoa viện");

        moduleCodeLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        moduleCodeLabel.setForeground(new java.awt.Color(54, 33, 89));
        moduleCodeLabel.setText("Tìm theo mã học phần");

        moduleNameLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        moduleNameLabel.setForeground(new java.awt.Color(54, 33, 89));
        moduleNameLabel.setText("Tìm theo tên học phần");

        moduleCodeTextField.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        moduleCodeTextField.setForeground(new java.awt.Color(54, 33, 89));
        moduleCodeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                moduleCodeTextFieldKeyPressed(evt);
            }
        });

        moduleNameTextField.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        moduleNameTextField.setForeground(new java.awt.Color(54, 33, 89));
        moduleNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moduleNameTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(facultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(facultyLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(moduleCodeLabel)
                    .addComponent(moduleCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(moduleNameLabel)
                    .addComponent(moduleNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facultyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(moduleCodeLabel)
                    .addComponent(moduleNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moduleCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moduleNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tablePanel.setBackground(new java.awt.Color(255, 255, 255));

        moduleScroll.setBorder(null);

        moduleListTable.setAutoCreateRowSorter(true);
        moduleListTable.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        moduleListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "Mã học phần", "Tên học phần", "Thời lượng", "Số tín chỉ", "TC học phí", "Trọng số", "Viện quản lý"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        moduleListTable.setGridColor(new java.awt.Color(204, 204, 255));
        moduleListTable.setOpaque(false);
        moduleScroll.setViewportView(moduleListTable);
        if (moduleListTable.getColumnModel().getColumnCount() > 0) {
            moduleListTable.getColumnModel().getColumn(0).setPreferredWidth(5);
            moduleListTable.getColumnModel().getColumn(1).setResizable(false);
            moduleListTable.getColumnModel().getColumn(2).setResizable(false);
            moduleListTable.getColumnModel().getColumn(3).setResizable(false);
            moduleListTable.getColumnModel().getColumn(4).setResizable(false);
            moduleListTable.getColumnModel().getColumn(5).setResizable(false);
            moduleListTable.getColumnModel().getColumn(6).setResizable(false);
            moduleListTable.getColumnModel().getColumn(7).setResizable(false);
        }

        jLabel1.setBackground(new java.awt.Color(102, 255, 51));
        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Danh sách học phần");
        jLabel1.setOpaque(true);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(moduleScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 1020, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addComponent(pagination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(moduleScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pagination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bodyPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void addFacultyComboBox() {
        List<String> facultyList = moduleListControl.getFacultyList();
        for (String faculty : facultyList) {
            facultyComboBox.addItem(faculty);
        }
        facultyComboBox.setSelectedIndex(-1);
    }
    
    private void moduleNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moduleNameTextFieldActionPerformed
        String moduleName = moduleNameTextField.getText();
            moduleListControl.setTotalModuleByName(moduleName);
            moduleListControl.setMaxResult(20);
            int size = moduleListControl.getTotalModuleByName();
            pagination.setSize(size);
            List resultList = moduleListControl.getModuleByName(moduleName, 0);
            displayModuleList(resultList, 0);
            if (size < 20) {
                pagination.setVisible(false);
            } else {
                pagination.setVisible(true);
            }
            pagination.setTable(new Table() {
                public void displayData(int firstResult) {
                    List resultList = moduleListControl.getModuleByName(moduleName, firstResult);
                    displayModuleList(resultList, firstResult);
                }
            });
    }//GEN-LAST:event_moduleNameTextFieldActionPerformed

    private void facultyComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_facultyComboBoxItemStateChanged
        facultyName = facultyComboBox.getItemAt(facultyComboBox.getSelectedIndex());
        moduleListControl.setTotalModuleByFaculty(facultyName);
        moduleListControl.setMaxResult(20);
        int size = moduleListControl.getTotalModuleByFaculty();
        pagination.setSize(size);
        pagination.setTable(new Table() {
            public void displayData(int firstResult) {
                List resultList = moduleListControl.getModuleByFaculty(facultyName, firstResult);
                displayModuleList(resultList, firstResult);
            }
        });
        List resultList = moduleListControl.getModuleByFaculty(facultyName, 0);
        displayModuleList(resultList, 0);
        if (size < 20) {
            pagination.setVisible(false);
        } else {
            pagination.setVisible(true);
        }
    }//GEN-LAST:event_facultyComboBoxItemStateChanged

    private void moduleCodeTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_moduleCodeTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String moduleCode = moduleCodeTextField.getText();
            List resultList = moduleListControl.getModuleByCode(moduleCode);
            displayModuleList(resultList, 0);
            pagination.setVisible(false);
        }
    }//GEN-LAST:event_moduleCodeTextFieldKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JComboBox<String> facultyComboBox;
    private javax.swing.JLabel facultyLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel moduleCodeLabel;
    private javax.swing.JTextField moduleCodeTextField;
    private javax.swing.JTable moduleListTable;
    private javax.swing.JLabel moduleNameLabel;
    private javax.swing.JTextField moduleNameTextField;
    private javax.swing.JScrollPane moduleScroll;
    private manager.ui.Pagination pagination;
    private javax.swing.JPanel tablePanel;
    // End of variables declaration//GEN-END:variables
}
