/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manager.ui;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.util.ArrayList;
import javax.swing.JLabel;
import manager.control.PaginationControl;

/**
 *
 * @author Dell
 */
public class Pagination extends javax.swing.JPanel {
    private ArrayList<MouseAdapter> oldAdapter = new ArrayList<MouseAdapter>();
    private ArrayList<Integer> oldIndex = new ArrayList<Integer>();
    private PaginationControl control;
    private Color defaultColor;
    private Table table;
    
    public void setTable(Table table) {
        this.table = table;
    }
    
    public void setSize(int size) {
        control.setCurrentPage(1);
        control.setSize(size);
        initLabelList();
    }
    
    /**
     * Creates new form PageNavigator
     */
    public Pagination() {
        initComponents();
        defaultColor = totalPageLabel.getForeground();
        control = new PaginationControl();
        initLabelList();
    }
    public Pagination(Table table) {
        this.table = table;
        initComponents();
        defaultColor = totalPageLabel.getForeground();
        control = new PaginationControl();
        initLabelList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        totalPageLabel = new javax.swing.JLabel();
        previous = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));
        page1 = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));
        page2 = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));
        page3 = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));
        leftEllipsis = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));
        page5 = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));
        page6 = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));
        page7 = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));
        page8 = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));
        rightEllipsis = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));
        page10 = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));
        page11 = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));
        page12 = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));
        next = new manager.ui.ButtonLabel(null, new java.awt.Color(85,55,118));

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(472, 25));
        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        totalPageLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        totalPageLabel.setForeground(new java.awt.Color(20, 53, 173));
        totalPageLabel.setText("Page 1 of 2 (55 item)");
        add(totalPageLabel);

        previous.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        previous.setForeground(new java.awt.Color(20, 53, 173));
        previous.setText("<");
        previous.setOpaque(true);
        previous.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                previousMousePressed(evt);
            }
        });
        add(previous);

        page1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        page1.setForeground(new java.awt.Color(20, 53, 173));
        page1.setText("1");
        page1.setOpaque(true);
        add(page1);

        page2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        page2.setForeground(new java.awt.Color(20, 53, 173));
        page2.setText("2");
        page2.setOpaque(true);
        add(page2);

        page3.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        page3.setForeground(new java.awt.Color(20, 53, 173));
        page3.setText("3");
        page3.setOpaque(true);
        add(page3);

        leftEllipsis.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        leftEllipsis.setForeground(new java.awt.Color(20, 53, 173));
        leftEllipsis.setText("...");
        leftEllipsis.setOpaque(true);
        add(leftEllipsis);

        page5.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        page5.setForeground(new java.awt.Color(20, 53, 173));
        page5.setText("5");
        page5.setOpaque(true);
        add(page5);

        page6.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        page6.setForeground(new java.awt.Color(20, 53, 173));
        page6.setText("6");
        page6.setOpaque(true);
        add(page6);

        page7.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        page7.setForeground(new java.awt.Color(20, 53, 173));
        page7.setText("7");
        page7.setOpaque(true);
        add(page7);

        page8.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        page8.setForeground(new java.awt.Color(20, 53, 173));
        page8.setText("8");
        page8.setOpaque(true);
        add(page8);

        rightEllipsis.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        rightEllipsis.setForeground(new java.awt.Color(20, 53, 173));
        rightEllipsis.setText("...");
        rightEllipsis.setOpaque(true);
        add(rightEllipsis);

        page10.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        page10.setForeground(new java.awt.Color(20, 53, 173));
        page10.setText("10");
        page10.setOpaque(true);
        add(page10);

        page11.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        page11.setForeground(new java.awt.Color(20, 53, 173));
        page11.setText("11");
        page11.setOpaque(true);
        add(page11);

        page12.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        page12.setForeground(new java.awt.Color(20, 53, 173));
        page12.setText("12");
        page12.setOpaque(true);
        add(page12);

        next.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        next.setForeground(new java.awt.Color(20, 53, 173));
        next.setText(">");
        next.setOpaque(true);
        add(next);
    }// </editor-fold>//GEN-END:initComponents
    private final int FIRST = 1, MIDDLE = 2, LAST = 3;

    private void previousMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousMousePressed
        if(control.hasPrevious()) {
            control.previous();
            executeState(getNextState(control.getCurrentPage()));
            table.displayData(control.getStartOfPage());
        }
    }//GEN-LAST:event_previousMousePressed

    private void nextMousePressed(java.awt.event.MouseEvent evt) {
        if(control.hasNext()) {
            control.next();
            executeState(getNextState(control.getCurrentPage()));
            table.displayData(control.getStartOfPage());
        }
    }

    public void pageMousePressed(java.awt.event.MouseEvent evt) {
        ButtonLabel button = (ButtonLabel) evt.getSource();
        control.setCurrentPage(Integer.parseInt(button.getText()));
        executeState(getNextState(control.getCurrentPage()));
        table.displayData(control.getStartOfPage());
    }

    public void executeState(int state) {
        System.out.println(control.getCurrentPage());
        resetAllLabel();
        switch (state) {
            case FIRST:
                stateFirst();
                break;
            case MIDDLE:
                stateMiddle();
                break;
            case LAST:
                stateLast();
                break;
        }
        colorCurrentPage();
    }

    public void colorCurrentPage() {
        for (int i = 0; i < labelList.length; i++) {
            String pageIndex = labelList[i].getText();
            if (pageIndex != null) {
                if (pageIndex.equals(Integer.toString(control.getCurrentPage()))) {
                    labelList[i].setBackground(Color.red);
                    labelList[i].setForeground(Color.white);
                    ((ButtonLabel)labelList[i]).setDefaultBackgoundColor((labelList[i].getBackground()));
                    ((ButtonLabel)labelList[i]).setDefaultForegoundColor((labelList[i].getForeground()));
                }
            }
        }
    }

    public void addMouse(JLabel label, int i) {
        MouseAdapter newAdapter = new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pageMousePressed(evt);
            }
        };
        label.addMouseListener(newAdapter);
        oldAdapter.add(newAdapter);
        oldIndex.add(new Integer(i));
    }

    public void stateFirst() {
        int nPage = control.getnPage();
        if (nPage <= MAX_NAVIGATION_PAGE) {
            for (int i = 0; i < nPage; i++) {
                labelList[i].setText(Integer.toString(i + 1));
                labelList[i].setForeground(defaultColor);
                addMouse(labelList[i], i);
            }
            labelList[nPage].setText(">");
            labelList[nPage].setForeground(defaultColor);
            MouseAdapter newAdapter = new java.awt.event.MouseAdapter() {
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    nextMousePressed(evt);
                }
            };
            labelList[nPage].addMouseListener(newAdapter);
            oldAdapter.add(newAdapter);
            oldIndex.add(new Integer(nPage));
        } else {
            for (int i = 0; i < 7; i++) {
                labelList[i].setText(Integer.toString(i + 1));
                labelList[i].setForeground(defaultColor);
                addMouse(labelList[i], i);
            }
            labelList[7].setText("...");
            labelList[7].setForeground(Color.red);
            for (int i = 8; i < MAX_NAVIGATION_PAGE + 1; i++) {
                labelList[i].setText(Integer.toString(nPage++ - 2));
                labelList[i].setForeground(defaultColor);
                addMouse(labelList[i], i);
            }
            labelList[MAX_NAVIGATION_PAGE + 1].setText(">");
            labelList[MAX_NAVIGATION_PAGE + 1].setForeground(Color.red);
            MouseAdapter newAdapter = new java.awt.event.MouseAdapter() {
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    nextMousePressed(evt);
                }
            };
            labelList[MAX_NAVIGATION_PAGE + 1].addMouseListener(newAdapter);
            oldAdapter.add(newAdapter);
            oldIndex.add(new Integer(MAX_NAVIGATION_PAGE + 1));
        }
    }

    public void stateLast() {
        int nPage = control.getnPage();

        for (int i = 0; i < 3; i++) {
            labelList[i].setText(Integer.toString(i + 1));
            labelList[i].setForeground(defaultColor);
            addMouse(labelList[i], i);
        }
        labelList[3].setText("...");
        labelList[3].setForeground(defaultColor);
        for (int i = 4; i < MAX_NAVIGATION_PAGE + 1; i++) {
            labelList[i].setText(Integer.toString(nPage++ - 6));
            labelList[i].setForeground(defaultColor);
            addMouse(labelList[i], i);
        }
        labelList[MAX_NAVIGATION_PAGE + 1].setText(">");
        labelList[MAX_NAVIGATION_PAGE + 1].setForeground(defaultColor);
        MouseAdapter newAdapter = new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nextMousePressed(evt);
            }
        };
        labelList[MAX_NAVIGATION_PAGE + 1].addMouseListener(newAdapter);
        oldAdapter.add(newAdapter);
        oldIndex.add(MAX_NAVIGATION_PAGE + 1);
    }

    public void stateMiddle() {
        int nPage = control.getnPage();
        for (int i = 0; i < 3; i++) {
            labelList[i].setText(Integer.toString(i + 1));
            labelList[i].setForeground(defaultColor);
            addMouse(labelList[i], i);
        }
        labelList[3].setText("...");
        labelList[3].setForeground(defaultColor);
        for (int i = 4; i < 8; i++) {
            labelList[i].setText(Integer.toString(control.getCurrentPage() + i - 5));
            labelList[i].setForeground(defaultColor);
            addMouse(labelList[i], i);
        }
        labelList[8].setText("...");
        for (int i = 9; i < 12; i++) {
            labelList[i].setText(Integer.toString(nPage++ - 2));
            labelList[i].setForeground(defaultColor);
            addMouse(labelList[i], i);
        }
        labelList[12].setText(">");
        labelList[12].setForeground(defaultColor);
        MouseAdapter newAdapter = new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nextMousePressed(evt);
            }
        };
        labelList[12].addMouseListener(newAdapter);
        oldAdapter.add(newAdapter);
        oldIndex.add(new Integer(12));
    }

    public int getNextState(int pageIndex) {
        if (pageIndex <= 5) {
            return FIRST;
        } else if (pageIndex >= control.getnPage() - 5) {
            return LAST;
        }
        return MIDDLE;
    }

    public void initLabelList() {
        totalPageLabel.setText("Page 1 of " + control.getnPage() + " (" + control.getSize() + " item)");
        this.labelList = new JLabel[]{page1, page2, page3,
            leftEllipsis, page5, page6, page7, page8, rightEllipsis, page10,
            page11, page12, next};
        Color color = this.getBackground();
        previous.setBackground(color);
        executeState(FIRST);
    }

    public void resetAllLabel() {
        Color color = this.getBackground();
        for (int i = 0; i < labelList.length; i++) {
            labelList[i].setBackground(color);
            labelList[i].setText(null);
        }
        for (int i = 0; i < oldAdapter.size(); i++) {
            labelList[oldIndex.get(i)].removeMouseListener(oldAdapter.get(i));
        }
        oldAdapter.clear();
        oldIndex.clear();
    }

    private final int MAX_NAVIGATION_PAGE = 10;
    private JLabel labelList[];
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel leftEllipsis;
    private javax.swing.JLabel next;
    private javax.swing.JLabel page1;
    private javax.swing.JLabel page10;
    private javax.swing.JLabel page11;
    private javax.swing.JLabel page12;
    private javax.swing.JLabel page2;
    private javax.swing.JLabel page3;
    private javax.swing.JLabel page5;
    private javax.swing.JLabel page6;
    private javax.swing.JLabel page7;
    private javax.swing.JLabel page8;
    private javax.swing.JLabel previous;
    private javax.swing.JLabel rightEllipsis;
    private javax.swing.JLabel totalPageLabel;
    // End of variables declaration//GEN-END:variables
}
